<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zxiang.project.settle.userExtension.mapper.UserExtensionMapper">
    
    <resultMap type="UserExtension" id="UserExtensionResult">
        <result property="incomeId"    column="income_id"    />
        <result property="coperatorId"    column="coperator_id"    />
        <result property="coperatorType"    column="coperator_type"    />
        <result property="sumDate"    column="sum_date"    />
        <result property="promDirectIncome"    column="prom_direct_income"    />
        <result property="promIndirectIncome"    column="prom_indirect_income"    />
        <result property="promPaperIncome"    column="prom_paper_income"    />
        <result property="promotionIncome"    column="promotion_income"    />
        <result property="directAgentIncome"    column="direct_agent_income"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="coperatorName"    column="coperator_name"    />
        <result property="puserId"    column="puser_id"    />
        <result property="puserName"    column="puser_name"    />
    </resultMap>
	
	<sql id="selectUserExtensionVo">
        select income_id, coperator_id, coperator_type,puser_id,puser_name, sum_date, prom_direct_income, prom_indirect_income, prom_paper_income, promotion_income, direct_agent_income, create_by, create_time, update_by, update_time, coperator_name from zx_user_extension
    </sql>
	
    <select id="selectUserExtensionList" parameterType="UserExtension" resultMap="UserExtensionResult">
        <include refid="selectUserExtensionVo"/>
        <where>  
            <if test="incomeId != null and incomeId != ''"> and income_id = #{incomeId}</if>
             <if test="coperatorId != null and coperatorId != ''"> and coperator_id = #{coperatorId}</if>
             <if test="coperatorType != null and coperatorType != ''"> and coperator_type = #{coperatorType}</if>
             <if test="sumDate != null and sumDate != ''"> and sum_date = #{sumDate}</if>
             <if test="promDirectIncome != null and promDirectIncome != ''"> and prom_direct_income = #{promDirectIncome}</if>
             <if test="promIndirectIncome != null and promIndirectIncome != ''"> and prom_indirect_income = #{promIndirectIncome}</if>
             <if test="promPaperIncome != null and promPaperIncome != ''"> and prom_paper_income = #{promPaperIncome}</if>
             <if test="promotionIncome != null and promotionIncome != ''"> and promotion_income = #{promotionIncome}</if>
             <if test="directAgentIncome != null and directAgentIncome != ''"> and direct_agent_income = #{directAgentIncome}</if>
             <if test="createBy != null and createBy != ''"> and create_by = #{createBy}</if>
             <if test="createTime != null and createTime != ''"> and create_time = #{createTime}</if>
             <if test="updateBy != null and updateBy != ''"> and update_by = #{updateBy}</if>
             <if test="updateTime != null and updateTime != ''"> and update_time = #{updateTime}</if>
             <if test="coperatorName != null and coperatorName != ''"> and coperator_name = #{coperatorName}</if>
         </where>
    </select>
    
    <select id="selectUserExtensionById" parameterType="Integer" resultMap="UserExtensionResult">
        <include refid="selectUserExtensionVo"/>
        where income_id = #{incomeId}
    </select>
        
    <insert id="insertUserExtension" parameterType="UserExtension">
        insert into zx_user_extension
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="coperatorId != null and coperatorId != '' ">coperator_id,</if>
			<if test="coperatorType != null and coperatorType != '' ">coperator_type,</if>
			<if test="promDirectIncome != null and promDirectIncome != '' ">prom_direct_income,</if>
			<if test="promIndirectIncome != null and promIndirectIncome != '' ">prom_indirect_income,</if>
			<if test="promPaperIncome != null and promPaperIncome != '' ">prom_paper_income,</if>
			<if test="promotionIncome != null and promotionIncome != '' ">promotion_income,</if>
			<if test="directAgentIncome != null and directAgentIncome != '' ">direct_agent_income,</if>
			<if test="createBy != null and createBy != '' ">create_by,</if>
			<if test="updateBy != null and updateBy != '' ">update_by,</if>
			<if test="updateTime != null and updateTime != '' ">update_time,</if>
			<if test="coperatorName != null and coperatorName != '' ">coperator_name,</if>
			<if test="puserId != null and puserId != '' ">puser_id,</if>
			<if test="puserName != null and puserName != '' ">puser_name,</if>
			 sum_date,
		     create_time
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="coperatorId != null and coperatorId != ''">#{coperatorId},</if>
			<if test="coperatorType != null and coperatorType != ''">#{coperatorType},</if>
			<if test="promDirectIncome != null and promDirectIncome != ''">#{promDirectIncome},</if>
			<if test="promIndirectIncome != null and promIndirectIncome != ''">#{promIndirectIncome},</if>
			<if test="promPaperIncome != null and promPaperIncome != ''">#{promPaperIncome},</if>
			<if test="promotionIncome != null and promotionIncome != ''">#{promotionIncome},</if>
			<if test="directAgentIncome != null and directAgentIncome != ''">#{directAgentIncome},</if>
			<if test="createBy != null and createBy != ''">#{createBy},</if>
			<if test="updateBy != null and updateBy != ''">#{updateBy},</if>
			<if test="updateTime != null and updateTime != ''">#{updateTime},</if>
			<if test="coperatorName != null and coperatorName != ''">#{coperatorName},</if>
			<if test="puserId != null and puserId != '' ">#{puserId},</if>
			<if test="puserName != null and puserName != '' ">#{puserName},</if>
			DATE_SUB(CURDATE(), INTERVAL 1 DAY),
			DATE_SUB(CURDATE(), INTERVAL 1 DAY)
         </trim>
    </insert>
	 
    <update id="updateUserExtension" parameterType="UserExtension">
        update zx_user_extension
        <trim prefix="SET" suffixOverrides=",">
            <if test="promDirectIncome != null  ">prom_direct_income =prom_direct_income+ #{promDirectIncome},</if>
            <if test="promIndirectIncome != null  ">prom_indirect_income = prom_indirect_income+#{promIndirectIncome},</if>
            <if test="promPaperIncome != null  ">prom_paper_income = prom_paper_income+#{promPaperIncome},</if>
            <if test="promotionIncome != null  ">promotion_income = promotion_income+#{promotionIncome},</if>
            <if test="directAgentIncome != null  ">direct_agent_income =direct_agent_income+#{directAgentIncome},</if>
            <if test="createBy != null  and createBy != ''  ">create_by = #{createBy},</if>
            <if test="updateBy != null  and updateBy != ''  ">update_by = #{updateBy},</if>
            <if test="updateTime != null  ">update_time = #{updateTime},</if>
        </trim>
        where income_id = #{incomeId}
    </update>
    
     <select id="selectUserExtension" parameterType="UserExtension" resultMap="UserExtensionResult">
        select income_id from zx_user_extension
        <where>  
             <if test="coperatorId != null and coperatorId != ''"> and coperator_id = #{coperatorId}</if>
             and DATE_FORMAT(sum_date, '%Y-%m-%d') = DATE_FORMAT(
			    DATE_SUB(CURDATE(), INTERVAL 1 DAY),
			    '%Y-%m-%d'
			  )
         </where>
    </select>
    

	<delete id="deleteUserExtensionById" parameterType="Integer">
        delete from zx_user_extension where income_id = #{incomeId}
    </delete>
	
    <delete id="deleteUserExtensionByIds" parameterType="String">
        delete from zx_user_extension where income_id in 
        <foreach item="incomeId" collection="array" open="(" separator="," close=")">
            #{incomeId}
        </foreach>
    </delete>
    
</mapper>